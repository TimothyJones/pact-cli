env:
  PACT_BROKER_FEATURES: publish_pacts_using_old_api

BUILD_TEST_TASK_TEMPLATE: &BUILD_TEST_TASK_TEMPLATE
  arch_check_script:
    - uname -am
  # https://github.com/pact-foundation/pact_broker-client/blob/7edfd58c92fc234aa6aab647ef3b816a3553a412/lib/pact_broker/client/git.rb#L28-L30
  # Update required for pact-broker-client to read CIRRUS env vars
  # so that pact-broker publish --auto-detect-version-properties
  # works correctly
  pr_script: |
    echo CIRRUS_PR=$CIRRUS_PR
    echo CIRRUS_BASE_SHA=$CIRRUS_BASE_SHA
    echo CIRRUS_BASE_BRANCH=$CIRRUS_BASE_BRANCH
    echo CIRRUS_CHANGE_IN_REPO=$CIRRUS_CHANGE_IN_REPO
    echo CIRRUS_BRANCH=$CIRRUS_BRANCH
    echo GIT_SHA=$GIT_SHA
    echo GIT_BRANCH=$GIT_BRANCH
    if [ $CIRRUS_PR ]; then
      echo "GIT_SHA=$CIRRUS_BASE_SHA" >> $CIRRUS_ENV
      echo "GIT_BRANCH=$CIRRUS_BASE_BRANCH" >> $CIRRUS_ENV
    else
      echo "GIT_SHA=$CIRRUS_CHANGE_IN_REPO" >> $CIRRUS_ENV
      echo "GIT_BRANCH=$CIRRUS_BRANCH" >> $CIRRUS_ENV   
    fi
  pr_check_script: |
    echo CIRRUS_PR=$CIRRUS_PR
    echo CIRRUS_BASE_SHA=$CIRRUS_BASE_SHA
    echo CIRRUS_BASE_BRANCH=$CIRRUS_BASE_BRANCH
    echo CIRRUS_CHANGE_IN_REPO=$CIRRUS_CHANGE_IN_REPO
    echo CIRRUS_BRANCH=$CIRRUS_BRANCH
    echo GIT_SHA=$GIT_SHA
    echo GIT_BRANCH=$GIT_BRANCH
  build_script:
    - node --version
    - npx --yes absolute-version
    - scripts/ci/build-and-test.sh

linux_arm_task: 
  arm_container:
    matrix:
      - image: node:20.2-slim # https://github.com/nodejs/docker-node/issues/1912
      - image: node:18-slim
      - image: node:16-slim
    cpu: 4
    memory: 4G
  setup_script:
    - apt update --yes && apt install --yes jq git curl
  << : *BUILD_TEST_TASK_TEMPLATE

macos_arm_task: 
  env:
    matrix:
      NODE_VERSION: 20
      NODE_VERSION: 18
      NODE_VERSION: 16
  macos_instance:
    image: ghcr.io/cirruslabs/macos-ventura-base:latest
  setup_node_script: |
    if [ "$NODE_VERSION" != "20" ]; then
      brew uninstall node
      rm '/opt/homebrew/bin/npm'
      rm '/opt/homebrew/bin/npx'
      rm -rf '/opt/homebrew/lib/node_modules'
      brew install node@$NODE_VERSION
      brew link node@$NODE_VERSION
    fi
    node --version
    find . -name '*.sh' -exec chmod +x {} \;
  << : *BUILD_TEST_TASK_TEMPLATE